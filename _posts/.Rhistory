{
system(paste("pandoc -s -S --webtex --toc -t slidy --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
})
[Columbia University](http://www.columbia.edu)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t slidy --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
})
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t slidy --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
})
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t slidy --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
source('~/.active-rstudio-document')
opts_chunk$set(cache=TRUE, fig.cap="")
```{r set-options, include=FALSE}
opts_chunk$set(cache=TRUE, fig.cap="")
```
## First Slide
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t slidy --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile, stylesheet="custom.css")
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML =
function(inputFile, outputFile) {
require(markdown)
markdownToHTML(inputFile, outputFile, stylesheet='custom.css')
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained -c custom.css", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained -c custom.css", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
source('~/.active-rstudio-document', echo=TRUE)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides -c style.css --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -c style.css -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc  -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc  -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
```{r set-options, include=FALSE}
opts_chunk$set(cache=TRUE, fig.cap="")
```
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/hiv.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/cdcgoals.gif" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/intensify.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/HIVstats.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/HIVstats2.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/grindr.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/grindrstats.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/grindrstats2.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/nlp.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/mood.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/scale.gif" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/condom.gif" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/TTM.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/evaluation.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/policy.png" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/dissemination.gif" width="90%"></img></center>
##
<center><img src="/Users/vivianpeng/Desktop/Columbia/Fall2013/PHI/Final/references.png" width="90%"></img></center>
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -c style.css -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -c style.css -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
require(ggplot2)
markers <- seq(from=1, to=1.30, by=.01)
# turn into intervals
intervals <- data.frame(Begin=markers[-length(markers)], End=markers[-1], Num=NA)
intervals$Num <- c(9, 18, 15, 15, 15, 11, 13, 18, 12, 12, 14, 11, 10, 8, 6, 12, 9, 8, 9, 4, 5, 11, 4, 11, 6, 11, 9, 9, 7, 6)
randoms <- data.frame(Draws=unlist(mapply(FUN=runif, intervals$Num, intervals$Begin, intervals$End)))
g <- ggplot(randoms, aes(x=Draws)) + geom_histogram(binwidth=.01, fill="grey50") + geom_vline(xintercept=c(1.195, 1.225), color="blue") + geom_vline(xintercept=c(1.21), color="black")
g + labs(x=NULL, y=NULL) +
theme(axis.line=element_line(colour = "black"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.border=element_blank(), axis.line=element_blank(),
line=element_blank(), text=element_blank())
intervals$Num <- c(9, 2, 15, 15, 15, 11, 13, 18, 12, 12, 14, 11, 10, 8, 6, 12, 9, 8, 9, 4, 5, 11, 4, 11, 6, 11, 9, 9, 7, 6)
g + labs(x=NULL, y=NULL) +
theme(axis.line=element_line(colour = "black"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.border=element_blank(), axis.line=element_blank(),
line=element_blank(), text=element_blank())
intervals$Num <- c(9, 2, 10, 2, 2, 11, 13, 18, 12, 12, 14, 11, 10, 8, 6, 12, 9, 8, 9, 4, 5, 11, 4, 11, 6, 11, 9, 9, 7, 6)
g + labs(x=NULL, y=NULL) +
theme(axis.line=element_line(colour = "black"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.border=element_blank(), axis.line=element_blank(),
line=element_blank(), text=element_blank())
g + labs(x=NULL, y=NULL) +
theme(axis.line=element_line(colour = "black"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.border=element_blank(), axis.line=element_blank(),
line=element_blank(), text=element_blank())
markers <- seq(from=1, to=1.30, by=.01)
intervals <- data.frame(Begin=markers[-length(markers)], End=markers[-1], Num=NA)
intervals$Num <- c(9, 18, 15, 15, 15, 11, 13, 18, 12, 12, 14, 11, 10, 8, 6, 12, 9, 8, 9, 4, 5, 11, 4, 11, 6, 11, 9, 9, 7, 6)
intervals$Num
intervals
intervals$Num <- c(9, 18, 15, 15, 15, 11, 13, 18, 12, 12, 14, 11, 10, 8, 6, 12, 9, 8, 9, 4, 5, 11, 4, 11, 6, 11, 9, 2, 2, 2)
randoms <- data.frame(Draws=unlist(mapply(FUN=runif, intervals$Num, intervals$Begin, intervals$End)))
g <- ggplot(randoms, aes(x=Draws)) + geom_histogram(binwidth=.01, fill="grey50") + geom_vline(xintercept=c(1.195, 1.225), color="blue") + geom_vline(xintercept=c(1.21), color="black")
g + labs(x=NULL, y=NULL) +
theme(axis.line=element_line(colour = "black"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
panel.border=element_blank(), axis.line=element_blank(),
line=element_blank(), text=element_blank())
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -t -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
<center><img src="/Users/vivianpeng/Desktop/MSF/Access/VaxGame/development.png" width="90%"></img></center>
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
options(rstudio.markdownToHTML=
function(inputFile, outputFile)
{
system(paste("pandoc -s -S --webtex --toc -t dzslides --self-contained", shQuote(inputFile), "-o", shQuote(outputFile)))
}
)
require(XML)
theURL <- "http://www.peakbagger.com/pbgeog/histmetropop.aspx"
uspop <- readHTMLTable(theURL, which=1, header = TRUE, stringsAsFactors=FALSE)
uspop
uspop <- readHTMLTable(theURL, which=2, header = TRUE, stringsAsFactors=FALSE)
uspop
uspop <- readHTMLTable(theURL, which=3, header = TRUE, stringsAsFactors=FALSE)
uspop
uspop <- readHTMLTable(theURL, which=4, header = TRUE, stringsAsFactors=FALSE)
uspop
head(uspop)
uspop <- readHTMLTable(theURL, which=4, header = FALSE, stringsAsFactors=FALSE)
head(uspop)
uspop <- readHTMLTable(theURL, which=4, header = TRUE, skip.rows= 1, stringsAsFactors=FALSE)
head(uspop)
names(uspop)
tail(uspop)
uspop <- readHTMLTable(theURL, which=4, header = TRUE, skip.rows= 1, as.data.frame= TRUE, stringsAsFactors=FALSE)
head(uspop)
uspop.c <- uspop[1-3,]
head(uspop.c)
uspop.c <- uspop[1:3,]
head(uspop.c)
uspop.c <- uspop[,1:3]
head(uspop.c)
uspop[1,]
uspop[6,]
uspop[2,]
uspop <- readHTMLTable(theURL, which=4, header = FALSE, skip.rows= 1, as.data.frame= TRUE, stringsAsFactors=FALSE)
head(uspop)
uspop.c <- uspop[,1:3]
uspop[2,]
uspop[1,]
uspop.c <- uspop[,1:3]
uspop.c[1,]
uspop.c1 <- uspop.c[! grepl("Rank",d$1),]
uspop.c1 <- uspop.c[! grepl("Rank",uspop.c$1),]
uspop.c$1
uspop.c$V1
uspop.c1 <- uspop.c[! grepl("Rank",uspop.c$V1),]
head(uspop.c1)
uspop.c2 <- uspop.c1[! grepl("<NA>", uspop.c$V2),]
uspop.c <- uspop[,1:3]
uspop.c1 <- uspop.c[! grepl("Rank",uspop.c$V1),]
uspop.c2 <- uspop.c1[! grepl("<NA>", uspop.c1$V2),]
head(uspop.c2)
uspop.c2 <- uspop.c1[! grepl("NA", uspop.c1$V2),]
head(uspop.c2)
uspop.c1[is.na(uspop.c1)] <- 0
head(uspop.c1)
uspop.c2 <- uspop.c1[! grepl("0", uspop.c1$V2),]
head(uspop.c2)
colnames(uspop.c2) <- c("Rank", "City", "Pop")
head(uspop.c2)
categories <- rep(0:4, times = 20, length.out = 100, each = 20)
categories <- rep(0:4, times = 20, length.out = 100, each = 20)
categories
x <- c("1680", "1700", "1720", "1740", "1740", "1775")
x
x <- c(1680, 1700, 1720, 1740, 1740, 1775)
x
year_1775  <- rep(x, times = 4, length.out=30, each = 4)
year_1775
y <- c(1780:2010, n= 10)
y
y <- seq(from=1790, to= 2010, by=10)
y
setwd("/Users/vivianpeng/git/edav/_posts")
require(XML)
theURL <- "http://www.peakbagger.com/pbgeog/histmetropop.aspx"
uspop <- readHTMLTable(theURL, which=4, header = FALSE, skip.rows= 1, as.data.frame= TRUE, stringsAsFactors=FALSE)
uspop.c <- uspop[,1:3]
uspop.c1 <- uspop.c[! grepl("Rank",uspop.c$V1),]
uspop.c1[is.na(uspop.c1)] <- 0
uspop.c2 <- uspop.c1[! grepl("0", uspop.c1$V2),]
colnames(uspop.c2) <- c("Rank", "City", "Pop")
x <- c(1680, 1700, 1720, 1740, 1740, 1775)
year_1775  <- rep(x, times = 4, length.out=24, each = 4)
y <- seq(from=1790, to= 2010, by=10)
year_2010 <- rep(y, times = 20, length.out = 460, each = 20)
years <- c(year_1775, year_2010)
uspop.c2$Year <- years
require(maps)
require(maptools)
require(mapproj)
require(ggplot2)
ciityCoords <- read.table("city_latlong.csv", stringsAsFactors = FALSE, header = TRUE, sep= ",")
citypop <- read.table("uspop.csv", stringsAsFactors= FALSE, header = TRUE, sep = ",")
ciityCoords <- read.table("citydata.csv", stringsAsFactors = FALSE, header = TRUE, sep= ",")
citydata <- read.table("citydata.csv", stringsAsFactors = FALSE, header = TRUE, sep= ",")
head(citydata)
head(uspop.c2)
gsub (",", "", uspop.c2@City)
gsub (",", "", uspop.c2$City)
uspop.c2$City <- gsub (",", "", uspop.c2$City)
head(uspop.c2)
theURL <- "http://www.peakbagger.com/pbgeog/histmetropop.aspx"
uspop <- readHTMLTable(theURL, which=4, header = FALSE, skip.rows= 1, as.data.frame= TRUE, stringsAsFactors=FALSE)
uspop.c <- uspop[,1:3]
uspop.c1 <- uspop.c[! grepl("Rank",uspop.c$V1),]
uspop.c1[is.na(uspop.c1)] <- 0
uspop.c2 <- uspop.c1[! grepl("0", uspop.c1$V2),]
colnames(uspop.c2) <- c("Rank", "City", "Pop")
x <- c(1680, 1700, 1720, 1740, 1740, 1775)
year_1775  <- rep(x, times = 4, length.out=24, each = 4)
year_2010 <- rep(y, times = 20, length.out = 460, each = 20)
years <- c(year_1775, year_2010)
uspop.c2$Year <- years
require(plyr)
citystate <- strsplit(uspop.c2$City, ",")
citystate
head(uspop.c2)
citystate
citystate[[3]]
citystate.df <- ldply(citystate)
citystate <- strsplit(uspop.c2$City, ",", fixed = TRUE)
citystate[[3]]
citystate.df <- ldply(citystate)
citystate <- strsplit(uspop.c2$City, ",", fixed = FALSE)
citystate[[3]]
citystate.df <- ldply(citystate)
unlist(citystate)
citystate <- strsplit(uspop.c2$City, ",", fixed = FALSE)
citystate[[3]]
require(stringr)
citystate <- str_split_fixed(uspop.c2$City, ",", 2)
citystate
citystate <- str_split_fixed(uspop.c2$City, ", ", 2)
citystate
colnames(citystate) <- c("City", "State")
head(citystate)
uspop.c2$City <- citystate$City
as.data.frame(citystate)
uspop.c2$City <- citystate$City
uspop.c2$State <- citystate$State
citystate <- as.data.frame(citystate)
uspop.c2$State <- citystate$State
head(uspop.c2)
uspop.c2$City <- citystate$City
head(uspop.c2)
head(citydata)
colnames(citydata) <- c("Zip", "Lat", "Long", "City", "State", "County")
head(citydata)
uspopmap <- merge(uspop.c2, citydata, by = "City", all = FALSE)
head(uspopmap)
uspopmap <- merge(uspop.c2, citydata, by = "City", all = FALSE, sort = FALSE)
head(uspopmap)
head(citydata)
head(uspop.c2)
citypop <- list(citydata, uspop.c2)
uspopmap <- join_all(citypop, by="City", match= "all", type = "full")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match= "all")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "first")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "first", by = "inner")
uspopmap <- join_all(citypop, by="City", match = "first", type = "inner")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "all", type = "inner")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "all", type = "right")
head(uspopmap)
citypop <- list(uspop.c2, citydata)
uspopmap <- join_all(citypop, by="City", match = "all", type = "inner")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "all", type = "left")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "all", type = "right")
head(uspopmap)
uspopmap <- join_all(citypop, by="City", match = "all", type = "inner")
head(uspopmap)
